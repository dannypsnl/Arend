\import Paths

\func \infix 6 + => Nat.+

\func proof_triv : (2 + 3) = 5 => idp

\func +-comm' (n m : Nat) : n + m = m + n
  -- idp: identity path
  | 0, 0 => idp
  -- 用 pmap 一次降解一層
  | suc n, 0 => pmap suc (+-comm' n 0)
  | 0, suc m => pmap suc (+-comm' 0 m)
  | suc n, suc m => pmap suc (
    suc n + m   ==< +-comm' (suc n) m >==
    suc (m + n) ==< pmap suc (inv (+-comm' n m)) >==
    suc (n + m) ==< +-comm' n (suc m) >==
    suc m + n   `qed
  )
